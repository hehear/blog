const logger = require('../../common/log4js');
const pool = require('../../common/mysqlPool');

const dayService={};

/**
 * 新增
 * @param news
 * @param callback
 */
dayService.add=function(filter,callback){

    // logger.info('add day :{}',filter);

    var  addSql = 'INSERT INTO day (date,wake_tm,sleep_tm,is_study,is_excercise,is_savemoney,is_completed,st,update_tm,user_id,update_user) VALUES (?,?,?,?,?,?,?,?,?,?,?)';
    var  addSqlParams = [filter.date,filter.wake_tm,filter.sleep_tm,filter.is_study,filter.is_excercise,filter.is_savemoney,filter.is_completed,
        filter.st,new Date(),filter.user_id,filter.update_user];

    pool.query(addSql,addSqlParams,function (err, result) {

        if(err){
            logger.info('新增报错',err.message);
            return;
        }

        //回掉
        callback(err,result);

    });

}

/**
 * 校验前一日是否入睡
 * @param news
 * @param callback
 */
dayService.isSleep=function(filter,callback){


    // logger.info(filter);

    var  querySql = ' SELECT \n' +
        '    * ' +
        'FROM ' +
        '    life.day ' +
        'WHERE' +
        '    date BETWEEN DATE_ADD(CURDATE(), INTERVAL -24 HOUR)  AND DATE_ADD(CURDATE(), INTERVAL -1 SECOND) ' +
        '    and user_id=?  ';

    var  querySqlParams =[filter.user_id];

    pool.query(querySql,querySqlParams,function (err, result) {

        if(err){
            logger.info('查询报错',err.message);
            return;
        }

        //回掉
        callback(err,result);

    });

}

/**
 * 校验当日是否wakeup
 * @param news
 * @param callback
 */
dayService.isWakeup=function(filter,callback){

    // logger.info(filter);

    var  querySql = ' SELECT \n' +
        '    * ' +
        'FROM ' +
        '    life.day ' +
        'WHERE' +
        '    date BETWEEN DATE_ADD(CURDATE(), INTERVAL 0 SECOND)  AND DATE_ADD( DATE_ADD(CURDATE(), INTERVAL 1 day  ) ,INTERVAL -1 SECOND) ' +
        '    and user_id=?  ';

    var  querySqlParams =[filter.user_id];

    pool.query(querySql,querySqlParams,function (err, result) {

        if(err){
            logger.info('查询报错',err.message);
            return;
        }

        //回掉
        callback(err,result);

    });

}

/**
 * 删除
 * @param id
 * @param callback
 */
dayService.delete=function(id,callback){

    var  deleteSql = 'delete from target where id=? ';
    var  deleteSqlParams = [id];

    pool.query(deleteSql,deleteSqlParams,function (err, result) {

        if(err){
            logger.info('删除出错',err.message);
            return;
        }

        //回掉
        callback(err,result);

    });

}

/**
 * 修改当天的信息
 * @param news
 * @param callback
 */
dayService.upt=function(filter,callback){

    var  uptSql = 'update life.day set ';
    var  uptSqlParams = [];

    if(filter.date){
        uptSql+=' date=?, ';
        uptSqlParams.push(filter.date);
    }

    if(filter.wake_tm){
        uptSql+=' wake_tm=?, ';
        uptSqlParams.push(filter.wake_tm);
    }

    if(filter.sleep_tm){
        uptSql+=' sleep_tm=?, ';
        uptSqlParams.push(filter.sleep_tm);
    }

    if(filter.is_study){
        uptSql+=' is_study=?, ';
        uptSqlParams.push(filter.is_study);
    }

    if(filter.is_excercise){
        uptSql+=' is_excercise=?, ';
        uptSqlParams.push(filter.is_excercise);
    }

    if(filter.is_savemoney){
        uptSql+=' is_savemoney=?, ';
        uptSqlParams.push(filter.is_savemoney);
    }

    if(filter.st){
        uptSql+=' st=?, ';
        uptSqlParams.push(filter.st);
    }

    if(filter.is_completed){
        uptSql+=' is_completed=?, ';
        uptSqlParams.push(filter.is_completed);
    }


    if(filter.update_user){
        uptSql+=' update_user=?, ';
        uptSqlParams.push(filter.update_user);
    }

    uptSql+=' update_tm=? ';
    uptSqlParams.push(new Date());


    uptSql += ' where ' +
        '    date BETWEEN DATE_ADD(CURDATE(), INTERVAL 0 SECOND)  AND DATE_ADD( DATE_ADD(CURDATE(), INTERVAL 1 day  ) ,INTERVAL -1 SECOND)   ';

    if(filter.user_id){
        uptSql+=' and user_id=? ';
        uptSqlParams.push(filter.user_id);
    }

    pool.query(uptSql,uptSqlParams,function (err, result) {

        if(err){
            console.log('修改出错',err.message);
            return;
        }

        //回掉
        callback(err,result);

    });

}

/**
 * 获取符合条件的数据条数
 * @param news
 * @param callback
 */
dayService.getTotal=function(filter,callback){

}


/**
 * 分页查询数据
 * @param news 条件
 * @param page 分页信息
 * @param callback
 */
dayService.query4Page=function(filter,page,callback){

    var querySql='select * from target WHERE 1=1  ';

    var querySqlParams=[];

    if(filter.uid){
        querySql+=' and  user_id = ?';
        querySqlParams.push(filter.uid)
    }

    if(filter.target_tp){
        querySql+=' and target_tp=? ';
        querySqlParams.push(filter.target_tp);
    }

    if(filter.target_name){
        querySql+=' and target_name like ?  ';
        querySqlParams.push("%"+filter.target_name+"%");

    }

    if(filter.target_content){
        querySql+=' and target_content like ?  ';
        querySqlParams.push("%"+filter.target_content+"%");

    }

    if(filter.st){
        querySql+=' and st =? ';
        querySqlParams.push(filter.st);

    }

    if(filter.info_remind_st){
        querySql+=' and info_remind_st =? ';
        querySqlParams.push(filter.info_remind_st);

    }

    if(filter.strtDt && filter.endDt){
        querySql+=' and target_date  between ? and ? ';
        querySqlParams.push(filter.strtDt);
        querySqlParams.push(filter.endDt);

    }

    var queryCountSql=querySql;

    var queryCountSqlParams=querySqlParams;

    querySql+=' order by id desc ';

    if(page.pgindex){
        querySql+=' limit ?,?';

        querySqlParams.push((page.pgindex-1)*page.pgsize);
        querySqlParams.push(page.pgsize);

    }

    pool.query(querySql, querySqlParams, function (err, rows1) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            queryCountSql="select count(*) as count from ( "+queryCountSql+" ) tgt";

            pool.query(queryCountSql,queryCountSqlParams,function(err, rows){
                //logger.info(rows);
                if(err){
                    logger.error(err);
                    callback('error');
                }else{
                    page.totalCount=rows[0].count;
                    page.pageCount=page.totalCount%page.pgsize==0?page.totalCount/page.pgsize:parseInt(page.totalCount/page.pgsize)+1;
                    callback(rows1,page);
                }
            });
        }

    });

}

/**
 * 查询当前时间所有有效的任务类型，以及完成任务类型任务的个数
 * @param callback
 * @return target_tp 任务类型
 * @return count 任务类型的个数
 * @return complete_count 任务类型完成的个数
 */
dayService.queryTargets=function(filter,callback){

    var querySqlParams=[];
    if(filter.uid){
        var sql=' and user_id = ?';
        querySqlParams.push(filter.uid)
    }

    var querySql='SELECT ' +
        '    a.target_tp,' +
        '    COUNT(a.target_tp) AS count,' +
        '    SUM(CASE ' +
        '        WHEN complete_st = \'2\' THEN 1' +
        '        ELSE 0 ' +
        '    END) AS complete_count ' +
        'FROM ' +
        '    life.target a ' +
        'WHERE ' +
        '    st = \'1\'' +
        sql+
        ' AND target_date BETWEEN DATE_ADD(CURDATE(), INTERVAL 0 HOUR) AND DATE_ADD(CURDATE(), INTERVAL 23 HOUR) ' +
        'GROUP BY a.target_tp ' ;


    pool.query(querySql,querySqlParams, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            callback(rows);

        }

    });

}

/**
 * 根根任务类型查询当天任务
 * @param filter.target_tp任务类型
 */
dayService.queryTargetsByTp=function(filter,callback){

    var querySql='SELECT * ' +
        'FROM ' +
        '    life.target a ' +
        'WHERE ' +
        '    st = \'1\'' +
        ' AND target_date BETWEEN DATE_ADD(CURDATE(), INTERVAL 0 HOUR) AND DATE_ADD(CURDATE(), INTERVAL 23 HOUR) ' +
        ' AND target_tp=? ' ;

    var querySqlParams=[filter.target_tp];

    if(filter.uid){
        querySql+=' and  user_id = ?';
        querySqlParams.push(filter.uid)
    }

    pool.query(querySql,querySqlParams, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            callback(rows);

        }

    });

}

/**
 * 修改任务状态
 * @param callback
 */
dayService.updtCompleteSt=function(filter,callback){

    var updtSql=' update life.target set  complete_st =? where id=? ' ;
    var updtSqlParams=[filter.complete_st,filter.id];

    pool.query(updtSql,updtSqlParams, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            var result='';
            if(filter.complete_st==1){
                result='打卡成功！';
            }else if(filter.complete_st==2){
                result='恭喜完成任务！';
            }else if(filter.complete_st==3){
                result='很遗憾，下次任务加油！';
            }
            callback(result);

        }

    });

}

/**
 * 修改任务信息提醒状态
 * @param callback
 */
dayService.updtInfoRemindSt=function(filter,callback){

    var updtSql=' update life.target set  info_remind_st =? where id=? ' ;
    var updtSqlParams=[filter.info_remind_st,filter.id];

    pool.query(updtSql,updtSqlParams, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{


            callback(rows.affectedRows);

        }

    });

}

/**
 * 修改任务状态，将今天未完成的任务置为未完成
 * @param callback
 */
dayService.updtUnCompleteSt=function(callback){

    var updtSql=' update life.target set  complete_st =3 where complete_st!=2 ' +
        'and target_date BETWEEN DATE_ADD(CURDATE(), INTERVAL 0 HOUR) AND DATE_ADD(CURDATE(), INTERVAL 23 HOUR)' ;

    pool.query(updtSql, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            //logger.info(rows.affectedRows);
            callback(rows.affectedRows);
        }

    });

}

/**
 * 修改任务完成情况说明
 * @param callback
 */
dayService.updtCompleteContent=function(filter,callback){

    var updtSql=' update life.target set  target_complete_content =? where id=? ' ;

    var updtSqlParams=[filter.target_complete_content,filter.id];

    pool.query(updtSql,updtSqlParams, function (err, rows) {
        if (err) {
            logger.error(err);
            callback('error');
        }else{

            callback(rows);

        }

    });

}

/**
 * 修改数据状态
 * @param id
 * @param st
 * @param callback
 */
dayService.uptSt=function(id,st,callback){

}


module.exports=dayService;